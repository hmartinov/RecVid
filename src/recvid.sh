#!/bin/bash

VERSION="1.0"
REPO_URL="https://raw.githubusercontent.com/hmartinov/RecVid/main"
SCRIPT_URL="https://github.com/hmartinov/RecVid/releases/latest/download/recvid.sh"
SCRIPT_PATH="$HOME/bin/recvid.sh"
SAVE_DIR="$HOME/Videos"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –Ω–æ–≤–∞ –≤–µ—Ä—Å–∏—è
REMOTE_VERSION=$(curl -fs "$REPO_URL/version.txt" 2>/dev/null | tr -d '\r\n ')

version_is_newer() {
    local IFS=.
    local i ver1=($1) ver2=($2)
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++)); do ver1[i]=0; done
    for ((i=${#ver2[@]}; i<${#ver1[@]}; i++)); do ver2[i]=0; done
    for ((i=0; i<${#ver1[@]}; i++)); do
        if ((10#${ver2[i]} > 10#${ver1[i]})); then return 0; fi
        if ((10#${ver2[i]} < 10#${ver1[i]})); then return 1; fi
    done
    return 1
}

if [[ -n "$REMOTE_VERSION" ]] && version_is_newer "$VERSION" "$REMOTE_VERSION"; then
    zenity --question \
        --title="–ù–∞–ª–∏—á–Ω–∞ –µ –Ω–æ–≤–∞ –≤–µ—Ä—Å–∏—è" \
        --text="–ò–º–∞—Ç–µ –≤–µ—Ä—Å–∏—è $VERSION.\n–ù–∞–ª–∏—á–Ω–∞ –µ –Ω–æ–≤–∞ –≤–µ—Ä—Å–∏—è: $REMOTE_VERSION\n\n–ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ —è –∏–∑—Ç–µ–≥–ª–∏—Ç–µ —Å–µ–≥–∞?"
    if [[ $? -eq 0 ]]; then
        TMPFILE=$(mktemp)
        if curl -fsSL "$SCRIPT_URL" -o "$TMPFILE"; then
            mv "$TMPFILE" "$SCRIPT_PATH"
            chmod +x "$SCRIPT_PATH"
            zenity --info --title="–û–±–Ω–æ–≤–µ–Ω–æ" --text="–°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –æ–±–Ω–æ–≤–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ –≤–µ—Ä—Å–∏—è $REMOTE_VERSION."
            exec "$SCRIPT_PATH" "$@"
            exit 0
        else
            zenity --error --title="–ì—Ä–µ—à–∫–∞" --text="–ù–µ—É—Å–ø–µ—à–Ω–æ –∏–∑—Ç–µ–≥–ª—è–Ω–µ –Ω–∞ –Ω–æ–≤–∞—Ç–∞ –≤–µ—Ä—Å–∏—è."
            rm -f "$TMPFILE"
        fi
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
for cmd in ffmpeg zenity xdg-open xdpyinfo pulseaudio; do
    if ! command -v "$cmd" >/dev/null 2>&1; then
        zenity --error --text="–õ–∏–ø—Å–≤–∞: $cmd"
        exit 1
    fi
done

# –ò–º–µ –Ω–∞ —Ñ–∞–π–ª
mkdir -p "$SAVE_DIR"

BASENAME="recvid-$(date +%Y%m%d-%H%M%S)"
VIDEO_TEMP="$SAVE_DIR/${BASENAME}_video.mkv"
AUDIO_TEMP="$SAVE_DIR/${BASENAME}_audio.m4a"
FINAL_FILE="$SAVE_DIR/${BASENAME}.mp4"

# –†–µ–∑–æ–ª—é—Ü–∏—è
RESOLUTION=$(xdpyinfo | grep dimensions | awk '{print $2}')
if [[ -z "$RESOLUTION" ]]; then
    zenity --error --text="–ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –æ–ø—Ä–µ–¥–µ–ª–∏ —Ä–µ–∑–æ–ª—é—Ü–∏—è—Ç–∞."
    exit 1
fi

# –ü–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ
zenity --question --text="–°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ –∑–∞–ø–∏—Å?\n\n–†–µ–∑–æ–ª—é—Ü–∏—è: $RESOLUTION\n–§–∞–π–ª: $FINAL_FILE"
if [[ $? -ne 0 ]]; then exit 1; fi

# –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ –±–µ–∑ –∑–≤—É–∫
ffmpeg -y \
  -f x11grab -video_size "$RESOLUTION" -framerate 25 -i :0.0 \
  -an -c:v libx264 -preset ultrafast -crf 18 "$VIDEO_TEMP" &

VID_PID=$!

# –ó–∞–ø–∏—Å –Ω–∞ –∞—É–¥–∏–æ
ffmpeg -y \
  -f pulse -i default -c:a aac -b:a 128k "$AUDIO_TEMP" &

AUD_PID=$!

# Zenity ‚Äì –∏–Ω—Ñ–æ
zenity --info --title="RecVid ‚Äì –ê–∫—Ç–∏–≤–µ–Ω –∑–∞–ø–∏—Å" \
       --text="üé• –ï–∫—Ä–∞–Ω—ä—Ç –∏ üéôÔ∏è –∑–≤—É–∫—ä—Ç —Å–µ –∑–∞–ø–∏—Å–≤–∞—Ç.\n\n–ó–∞—Ç–≤–æ—Ä–∏ —Ç–æ–∑–∏ –ø—Ä–æ–∑–æ—Ä–µ—Ü, –∑–∞ –¥–∞ —Å–ø—Ä–µ—à."

# –°–ø–∏—Ä–∞–Ω–µ
kill -INT "$VID_PID" 2>/dev/null
kill -INT "$AUD_PID" 2>/dev/null
sleep 0.5
wait "$VID_PID"
wait "$AUD_PID"

# –°–ª–∏–≤–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ + –∞—É–¥–∏–æ
ffmpeg -y \
  -i "$VIDEO_TEMP" -i "$AUDIO_TEMP" \
  -c:v copy -c:a aac "$FINAL_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞
if [[ ! -f "$FINAL_FILE" ]]; then
    zenity --error --text="‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–ª–∏–≤–∞–Ω–µ—Ç–æ –Ω–∞ –≤–∏–¥–µ–æ –∏ –∑–≤—É–∫."
    exit 1
fi

# –ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ
rm -f "$VIDEO_TEMP" "$AUDIO_TEMP"

# –§–∏–Ω–∞–ª–Ω–æ –º–µ–Ω—é
CHOICE=$(zenity --list \
  --title="RecVid ‚Äì –ì–æ—Ç–æ–≤–æ!" \
  --text="‚úÖ –ó–∞–ø–∏—Å—ä—Ç –ø—Ä–∏–∫–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ!\n–§–∞–π–ª: $FINAL_FILE" \
  --column="–î–µ–π—Å—Ç–≤–∏–µ" \
  "üé¨ –ü—É—Å–Ω–∏ –≤–∏–¥–µ–æ—Ç–æ" \
  "üìÇ –û—Ç–≤–æ—Ä–∏ –ø–∞–ø–∫–∞—Ç–∞")

if [[ "$CHOICE" == "üé¨ –ü—É—Å–Ω–∏ –≤–∏–¥–µ–æ—Ç–æ" ]]; then
    xdg-open "$FINAL_FILE"
elif [[ "$CHOICE" == "üìÇ –û—Ç–≤–æ—Ä–∏ –ø–∞–ø–∫–∞—Ç–∞" ]]; then
    xdg-open "$(dirname "$FINAL_FILE")"
fi
